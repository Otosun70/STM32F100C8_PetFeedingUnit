#ifndef OLED_H_
#define OLED_H_



/**
 * This Library is written and optimized by Olivier Van den Eede(4ilo) in 2016
 * for Stm32 Uc and HAL-i2c lib's.
 *
 * To use this library with ssd1306 oled display you will need to customize the defines below.
 *
 * This library uses 2 extra files (fonts.c/h).
 * In this files are 3 different fonts you can use:
 * 		- Font_7x10
 * 		- Font_11x18
 * 		- Font_16x26
 *
 */

#include "stm32f1xx_hal.h"

#include "fonts.h"



// I2c port as defined in main generated by CubeMx
#define OLED_I2C_PORT		hi2c1
// I2c address
#define OLED_I2C_ADDR        0x78
// SSD1306 width in pixels
#define OLED_WIDTH           128
// SSD1306 LCD height in pixels
#define OLED_HEIGHT          64


// Screen object



//
//  Enumeration for screen colors
//
typedef enum {
	Black = 0x00, // Black color, no pixel
	White = 0x01  //Pixel is set. Color depends on LCD
} OLED_COLOR;



//
//  Struct to store transformations
//
typedef struct {
	uint16_t CurrentX;
	uint16_t CurrentY;
	uint8_t Inverted;
	uint8_t Initialized;
} SSD1306_t;

//	Definition of the i2c port in main
extern I2C_HandleTypeDef OLED_I2C_PORT;

//
//  Function definitions
//
uint8_t OLED_Init(void);

void OLED_WriteCommand(uint8_t command);

void OLED1_Fill(OLED_COLOR color);

void OLED_UpdateScreen(void);

void OLED1_DrawPixel(uint8_t x, uint8_t y, OLED_COLOR color);

char OLED_WriteChar(char ch, FontDef Font, OLED_COLOR color);

char OLED_WriteString(char* str, FontDef Font, OLED_COLOR color);

void OLED_SetCursor(uint8_t x, uint8_t y);

void OLED1_DrawCircle(const uint8_t CenterX, const uint8_t CenterY, const uint8_t Radius, OLED_COLOR color);

void OLED_DrawPixel(uint8_t x, uint8_t y, OLED_COLOR color);

void OLED_ToggleInvert(void);

void OLED_Fill(OLED_COLOR Color);

void OLED_GotoXY(uint16_t x, uint16_t y);

void OLED_DrawLine(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, OLED_COLOR c);

void OLED_DrawRectangle(uint16_t x, uint16_t y, uint16_t w, uint16_t h, OLED_COLOR c);

void OLED_DrawFilledRectangle(uint16_t x, uint16_t y, uint16_t w, uint16_t h, OLED_COLOR c);

void OLED_DrawTriangle(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, uint16_t x3, uint16_t y3, OLED_COLOR color);

void OLED_DrawFilledTriangle(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, uint16_t x3, uint16_t y3, OLED_COLOR color);

void OLED_DrawCircle(int16_t x0, int16_t y0, int16_t r, OLED_COLOR c);

void OLED_DrawFilledCircle(int16_t x0, int16_t y0, int16_t r, OLED_COLOR c);


#endif
